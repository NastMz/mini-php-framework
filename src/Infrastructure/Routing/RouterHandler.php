<?php
declare(strict_types=1);

namespace App\Infrastructure\Routing;

use App\Infrastructure\Http\RequestInterface;
use App\Infrastructure\Http\Response;
use App\Infrastructure\Http\ResponseInterface;
use App\Infrastructure\Middleware\RequestHandlerInterface;

/**
 * Class RouterHandler
 *
 * Handles incoming HTTP requests by dispatching them to the appropriate route.
 * Implements the RequestHandlerInterface for PSR-15 middleware compatibility.
 */
class RouterHandler implements RequestHandlerInterface
{
    public function __construct(private Router $router) {}

    /**
     * Handles the incoming request and returns a response.
     *
     * This method uses the Router to find the appropriate route based on the request method and path,
     * and then dispatches the request to that route's handler.
     *
     * @param RequestInterface $req The incoming HTTP request
     * @return ResponseInterface The HTTP response generated by the route handler
     */
    public function handle(RequestInterface $req): ResponseInterface
    {
        $res = new Response();
        return $this->router->dispatch(
            $req->getMethod(),
            $req->getPath(),
            $req,
            $res
        );
    }
}
